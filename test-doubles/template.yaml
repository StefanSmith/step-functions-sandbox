AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::LanguageExtensions
Parameters:
  LambdaFunctionNames:
    Type: CommaDelimitedList
Resources:
  TestDoubleManagerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref AWS::AccountId
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SQSInteraction
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                Resource:
                  - !GetAtt EventsQueue.Arn
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource:
                  - !GetAtt ResultsQueue.Arn
        - PolicyName: S3Interaction
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub "${TestContextBucket.Arn}/*"
  'Fn::ForEach::LambdaFunctions':
    - LambdaFunctionName
    - !Ref LambdaFunctionNames
    - '${LambdaFunctionName}Function':
        Type: AWS::Lambda::Function
        Properties:
          Code:
            ZipFile: |
              __CODE_PLACEHOLDER__
          Handler: index.handler
          Role: !GetAtt LambdaFunctionExecutionRole.Arn
          Runtime: python3.12
          Timeout: 10
          Environment:
            Variables:
              EVENTS_QUEUE_URL: !Ref EventsQueue
              RESULTS_QUEUE_URL: !Ref ResultsQueue
              TEST_CONTEXT_BUCKET_NAME: !Ref TestContextBucket
  LambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SQSInteraction
          PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage*
                Effect: Allow
                Resource: !GetAtt EventsQueue.Arn
              - Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:ChangeMessageVisibilityBatch
                  - sqs:DeleteMessage
                  - sqs:DeleteMessageBatch
                  - sqs:GetQueueAttributes
                  - sqs:ReceiveMessage
                Effect: Allow
                Resource: !GetAtt ResultsQueue.Arn
        - PolicyName: S3Interaction
          PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource: !Sub "${TestContextBucket.Arn}/*"
  EventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      ContentBasedDeduplication: true
      MessageRetentionPeriod: 60
      VisibilityTimeout: 5
  ResultsQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      ContentBasedDeduplication: true
      MessageRetentionPeriod: 60
      VisibilityTimeout: 5
  TestContextBucket:
    Type: AWS::S3::Bucket
    Properties: {}
Outputs:
  'Fn::ForEach::LambdaFunctionNameOutputs':
    - LambdaFunctionName
    - !Ref LambdaFunctionNames
    - '${LambdaFunctionName}FunctionName':
        Value:
          Ref: !Sub '${LambdaFunctionName}Function'
  EventsQueueArn:
    Value: !GetAtt EventsQueue.Arn
  ResultsQueueArn:
    Value: !GetAtt ResultsQueue.Arn